const dbDepartments=["AGCJ","AGSC","ALEC","ALED","AGEC","ANSC","DASC","BICH","GENE","AGSM","BAEN","AGLS","ESSM","FRSC","RENR","EEBL","ENTO","FIVS","HORT","FSTC","NUTR","BESC","PLPA","POSC","RPTS","MEPS","SCSC","WFSC","NFSC","ARCH","ENDS","CARC","COSC","LAND","LDEV","PLAN","URPN","URSC","ARTS","VIST","VIZA","BUSH","INTA","PSAA","ACCT","BUAD","BUSN","IBUS","FINC","ISYS","SCMT","MGMT","MKTG","ISTM","BIMS","DDHS","OMFP","ORDI","ENDO","AEGD","OMSF","ORTH","PEDD","PERI","PROS","HPED","OBIO","OMFS","OMFR","CEHD","EDAD","EHRD","TCMG","BEFB","BIED","CPSY","EDTC","EPFB","EPSY","INST","SEFB","SPED","SPSY","ATTR","DCED","HEFB","HLTH","KINE","KNFB","SPMT","EDCI","MASC","MEFB","RDNG","TEED","TEFB","AERO","MEMA","BMEN","CHEN","SENG","CVEN","ENDG","ENGR","ICPE","CSCE","ECEN","ENTC","ESET","IDIS","MMET","ISEN","MSEN","MEEN","NUEN","OCEN","PETE","BIOT","EVEN","MXET","TCMT","AREN","ITDE","CYBR","CLEN","ATMO","GEOS","WMHS","GEOG","GEOL","GEOP","OCNG","LAW ","ANTH","AFST","FILM","JOUR","LBAR","RELS","WGST","COMM","ECMT","ECON","ENGL","LING","HISP","SPAN","HIST","ARAB","ASIA","CHIN","CLAS","EURO","FREN","GERM","INTS","ITAL","JAPN","MODL","RUSS","MUSC","PERF","THAR","PHIL","POLS","PSYC","SOCI","HHUM","LMAS","MUST","MCMD","MPIM","MSCI","HCPI","EDHP","MPHY","NEXT","AERS","SOMS","MLSC","NVSC","FORS","NURS","PHEO","PHEB","PHPM","HPCH","PHLT","SOPH","BIOL","CHEM","NRSC","SCEN","MATH","ASTR","PHYS","STAT","VMID","VIBS","VLCS","VTPP","VPAR","VPAT","VTMI","VTPB","VSCS"].sort(),dbYears=[2014,2015,2016,2017,2018,2019,2020,2021];let dbProfessors=[],dbRawDataCache=[[]],dbRawData=[[]],cache=[];function queryDB(department,course){return new Promise((resolve,reject)=>{setTimeout(()=>{reject("Request timed out")},5e3);let found=-1,query="search?d="+department+"&c="+course;for(i=0;i<cache.length;i++)if(cache[i].query==query){found=i;break}-1!=found?"[]"!=cache[found].text?(setDBRawDataCache(JSON.parse(cache[found].text)),resolve("Done")):reject(department+" "+course+" not found!"):fetch(query).then(response=>{response.text().then(text=>{try{cache.push({query:query,text:text}),"[]"!=text?(setDBRawDataCache(JSON.parse(text)),resolve("Done")):reject(department+" "+course+" not found!")}catch{reject("Error: "+text)}})}).catch(err=>{reject("Error: "+err)})})}function interpolateNumArray(data,stepsize){for(newData=[Number(data[0])];newData[newData.length-1]<Number(data[data.length-1]);)newData.push(newData[newData.length-1]+stepsize);return newData}function filterUnique(data,keyName,filterWhitelist,filterKeyName,filterWhitelist2,filterKeyName2){var unique=[];for(i=0;i<data.length;i++)null!=filterWhitelist&&-1==filterWhitelist.indexOf(data[i][filterKeyName])||null!=filterWhitelist2&&-1==filterWhitelist2.indexOf(data[i][filterKeyName2])||-1===unique.indexOf(data[i][keyName])&&unique.push(data[i][keyName]);return unique}function filterJSON(data,filterWhitelist,filterKeyName,filterWhitelist2,filterKeyName2,filterWhitelist3,filterKeyName3){var matches=[];for(i=0;i<data.length;i++)null!=filterWhitelist&&-1==filterWhitelist.indexOf(data[i][filterKeyName])||null!=filterWhitelist2&&-1==filterWhitelist2.indexOf(data[i][filterKeyName2])||null!=filterWhitelist3&&-1==filterWhitelist3.indexOf(data[i][filterKeyName3])||matches.push(data[i]);return matches}function filterFuncJSON(data,filterKeyName,filterFunc,filterFuncArg){var matches=[];for(i=0;i<data.length;i++)filterFunc(filterFuncArg,data[i][filterKeyName])&&matches.push(data[i]);return matches}function padNumJSON(data,keyName,padding){for(i=0;i<data.length;i++)data[i][keyName]=""+Number(data[i][keyName]).toFixed(padding);return data}function numBoolJSON(data,keyName){for(i=0;i<data.length;i++)0==Number(data[i][keyName])?data[i][keyName]="No":1==Number(data[i][keyName])&&(data[i][keyName]="Yes");return data}function honorsFilter(honors,course){return"INHONORS"==honors?!course.match(/[a-z]/i):"EXHONORS"==honors?!course.match(/[a-z]/i)&&!(course.match(/2[0-9]{2,}/)||course.match(/58[0-9]{1,}/)):"ONHONORS"==honors&&(!course.match(/[a-z]/i)&&(course.match(/2[0-9]{2,}/)||course.match(/58[0-9]{1,}/)))}function getDBRawDataCache(){return dbRawDataCache}function getDBRawData(){return dbRawData}function getDBDepartments(){return dbDepartments}function getDBYears(){return dbYears}function getDBProfessors(){return dbProfessors}function setDBRawDataCache(newdbRawDataCache){dbRawDataCache=newdbRawDataCache,getGPARangeChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseGpaPlot.data.datasets=newDataset,courseGpaPlot.update("none")}),getLetterChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseLetterPlot.data.datasets=newDataset,courseLetterPlot.update("none")}),getCourseDifficultyChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseDiffPlot.data.datasets=newDataset,courseDiffPlot.update("none")})}function updateData(years,semesters,professors,honors){dbRawData=[],years=interpolateNumArray(years,1),semesters=semesters.map(semester=>semester.toUpperCase()),dbProfessors=filterUnique(dbRawDataCache,"professorName",semesters,"semester"),dbRawData=padNumJSON(dbRawDataCache,"avgGPA",3),dbRawData=numBoolJSON(dbRawDataCache,"honors"),dbRawData=filterJSON(dbRawData,years,"year",semesters,"semester",professors,"professorName"),dbRawData=filterFuncJSON(dbRawData,"section",honorsFilter,honors)}function getGPAPlotChartLabels(years,semesters){labels=[],years=interpolateNumArray(years,1);for(let i=0;i<years.length;i++)for(let j=0;j<semesters.length;j++)labels.push(semesters[j]+" "+years[i].toString().slice(2)+"'");return labels}function autoPopulateProfs(){var professors;$("#professor-select").empty(),getDBProfessors().forEach(element=>{let count=0,years=[],semesters=[],rawData=getDBRawDataCache();for(let i=0;i<rawData.length;i++)rawData[i].professorName.toUpperCase()!=element.toUpperCase()||-1!=years.indexOf(rawData[i].year)&&-1!=semesters.indexOf(rawData[i].semester)||(count+=1,years.push(rawData[i].year),semesters.push(rawData[i].semester));count>1?$("#professor-select").append($("<option selected></option>").attr("value",element.toUpperCase()).text(element)):$("#professor-select").append($("<option></option>").attr("value",element.toUpperCase()).text(element))}),$("#professor-select").trigger("chosen:updated"),updateSelections()}function regenGPAPlotChartColors(){getGPAPlotChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#professor-select").chosen().val(),newDataset=>{gpaPlot.data.datasets=newDataset,gpaPlot.update("none")})}function getGPAPlotChartDataset(years,semesters,professors,callback){years=interpolateNumArray(years,1);let rawData=dbRawData,avgGPA=new Array(professors.length),count=new Array(professors.length);for(let i=0;i<avgGPA.length;i++)avgGPA[i]=new Array(years.length*semesters.length).fill(0),count[i]=new Array(years.length*semesters.length).fill(0);for(let j=0;j<rawData.length;j++)for(let k=0;k<years.length*semesters.length;k++){let tmp1=Math.floor(k/semesters.length)%years.length,tmp2=Math.floor(k%semesters.length);rawData[j].year==Number(years[tmp1])&&rawData[j].semester==semesters[tmp2].toUpperCase()&&(index1=professors.indexOf(rawData[j].professorName),-1!=index1&&(avgGPA[index1][k]=Number(avgGPA[index1][k])+Number(rawData[j].avgGPA),count[index1][k]=Number(count[index1][k])+1))}for(let i=0;i<avgGPA.length;i++)for(let j=0;j<years.length*semesters.length;j++)avgGPA[i][j]=0==count[i][j]?void 0:Number(avgGPA[i][j])/Number(count[i][j]);dataset=[];for(let i=0;i<avgGPA.length;i++){let color="#"+(16777215*Math.random()<<0).toString(16).padStart(6,"0");dataset.push({label:professors[i],data:avgGPA[i],fill:!1,borderColor:color,backgroundColor:color+"80",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}})}return callback(dataset)}function getLetterChartDataset(years,semesters,honors,callback){years=interpolateNumArray(years,1);let rawData=dbRawDataCache,labels=["A","B","C","D","F","Q"],bgColors=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)","rgba(102,102,102,0.66)"],avgLetterGrade=new Array(labels.length).fill(0);for(let i=0;i<rawData.length;i++)years.includes(rawData[i].year)&&semesters.includes(rawData[i].semester)&&honorsFilter(honors,rawData[i].section)&&(avgLetterGrade[0]+=Number(rawData[i].numA),avgLetterGrade[1]+=Number(rawData[i].numB),avgLetterGrade[2]+=Number(rawData[i].numC),avgLetterGrade[3]+=Number(rawData[i].numD),avgLetterGrade[4]+=Number(rawData[i].numF),avgLetterGrade[5]+=Number(rawData[i].numQ));let count=avgLetterGrade[0]+avgLetterGrade[1]+avgLetterGrade[2]+avgLetterGrade[3]+avgLetterGrade[4]+avgLetterGrade[5];for(let i=0;i<avgLetterGrade.length;i++)avgLetterGrade[i]=avgLetterGrade[i]/count*99.999999;dataset=[];for(let i=0;i<avgLetterGrade.length;i++)dataset.push({label:labels[i],data:[avgLetterGrade[i]],backgroundColor:bgColors[i],borderWidth:1});return callback(dataset)}function getGPARangeChartDataset(years,semesters,honors,callback){years=interpolateNumArray(years,1);let rawData=dbRawDataCache,labels=["","GPA Low: ","GPA Avg: ","GPA High: ",""],bgColors=["rgba(102,102,102,0.66)","rgba(247,194,14,0.66)","rgba(128,149,7,0.66)","rgba(247,194,14,0.66)","rgba(102,102,102,0.66)"],gpaRange=new Array(labels.length).fill(0),gpaMin=4,gpaMax=0,gpaAvg=0,count=0;for(let i=0;i<rawData.length;i++)years.includes(rawData[i].year)&&semesters.includes(rawData[i].semester)&&honorsFilter(honors,rawData[i].section)&&(gpaAvg+=Number(rawData[i].avgGPA),count+=1,gpaMin>Number(rawData[i].avgGPA)&&(gpaMin=Number(rawData[i].avgGPA)),gpaMax<Number(rawData[i].avgGPA)&&(gpaMax=Number(rawData[i].avgGPA)));gpaAvg/=count,gpaRange[2]=.04,gpaRange[0]=gpaMin,gpaRange[1]=gpaAvg-gpaMin-gpaRange[2]/2,gpaRange[3]=gpaMax-gpaRange[0]-gpaRange[1]-gpaRange[2]-gpaRange[2]/2,gpaRange[4]=4-(gpaRange[0]+gpaRange[1]+gpaRange[2]+gpaRange[3]),labels[1]+=""+Number(gpaMin).toFixed(3),labels[2]+=""+Number(gpaAvg).toFixed(3),labels[3]+=""+Number(gpaMax).toFixed(3),dataset=[];for(let i=0;i<gpaRange.length;i++)dataset.push({label:labels[i],data:[gpaRange[i]],backgroundColor:bgColors[i],borderWidth:1});return callback(dataset)}function getCourseDifficultyChartDataset(years,semesters,honors,callback){years=interpolateNumArray(years,1);let rawData=dbRawDataCache,bgColors=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)"],minGPA=4,avgGPA=0,count=0,numStudentsPass=0,numStudentsFail=0,courseDiff=0,profs=[];for(let i=0;i<rawData.length;i++)years.includes(rawData[i].year)&&semesters.includes(rawData[i].semester)&&honorsFilter(honors,rawData[i].section)&&(avgGPA+=Number(rawData[i].avgGPA),count+=1,numStudentsPass+=Number(rawData[i].numA),numStudentsPass+=Number(rawData[i].numB),numStudentsPass+=Number(rawData[i].numC),numStudentsFail+=Number(rawData[i].numD),numStudentsFail+=Number(rawData[i].numF),numStudentsFail+=Number(rawData[i].numI),numStudentsFail+=Number(rawData[i].numS),numStudentsFail+=Number(rawData[i].numU),numStudentsFail+=Number(rawData[i].numQ),numStudentsFail+=Number(rawData[i].numX),profs.includes(rawData[i].professorName)||profs.push(rawData[i].professorName),minGPA>Number(rawData[i].avgGPA)&&(minGPA=Number(rawData[i].avgGPA)));return avgGPA/=count,courseDiff+=1,.075<numStudentsFail/(numStudentsPass+numStudentsFail)&&(courseDiff+=1),.1<numStudentsFail/(numStudentsPass+numStudentsFail)&&(courseDiff+=1),avgGPA<3.5&&(courseDiff+=1),avgGPA<3.25&&(courseDiff+=1),avgGPA<3&&(courseDiff+=1),avgGPA<2.75&&(courseDiff+=1),avgGPA<2.25&&(courseDiff+=1),minGPA<2.5&&(courseDiff+=1),minGPA<2&&(courseDiff+=1),dataset=[],dataset.push({label:"Difficulty",data:[courseDiff],backgroundColor:bgColors[Math.floor((courseDiff-1)/2)],borderWidth:1}),dataset.push({label:"",data:[10-courseDiff],backgroundColor:"rgba(102,102,102,0.66)",borderWidth:1}),callback(dataset)}function jumpToAnchor(anchorID){var url=location.href;location.href="#"+anchorID,history.replaceState(null,null,url)}function updateSelections(updateProfsList){var department=$("#department-select").val(),course=$("#course-field").val();if(""!=department&&""!=course){var professors;if(updateData($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#professor-select").chosen().val(),$("#honors-select").chosen().val()),updateProfsList)$("#professor-select").empty(),getDBProfessors().forEach(element=>{$("#professor-select").append($("<option></option>").attr("value",element.toUpperCase()).text(element))}),$("#professor-select").attr("data-placeholder","Click here to select some professors"),$("#professor-select").trigger("chosen:updated");null==rawdatagrid||rawdatagrid.updateConfig({data:getDBRawData()}).forceRender(),gpaPlot.data.labels=getGPAPlotChartLabels($("#year-range").val().split(","),$("#semester-select").chosen().val()),getGPAPlotChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#professor-select").chosen().val(),newDataset=>{gpaPlot.data.datasets=newDataset,gpaPlot.update("none")}),getGPARangeChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseGpaPlot.data.datasets=newDataset,courseGpaPlot.update("none")}),getLetterChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseLetterPlot.data.datasets=newDataset,courseLetterPlot.update("none")}),getCourseDifficultyChartDataset($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#honors-select").chosen().val(),newDataset=>{courseDiffPlot.data.datasets=newDataset,courseDiffPlot.update("none")}),updateThemeMode()}}function getCourseData(){var department=$("#department-select").val(),course=$("#course-field").val();if(""!=department&&""!=course){var imgsave=$("#search-button-img").html();$("#search-button-img").html('<i class="fa fa-refresh fa-spin fa-lg" style="color:white;" title="Loading..."></i>'),queryDB(department,course).then(value=>{var professors;$("#professor-select").empty(),updateData($("#year-range").val().split(","),$("#semester-select").chosen().val(),$("#professor-select").chosen().val(),$("#honors-select").chosen().val()),getDBProfessors().forEach(element=>{$("#professor-select").append($("<option></option>").attr("value",element.toUpperCase()).text(element))}),$("#professor-select").attr("data-placeholder","Click here to select some professors"),$("#professor-select").trigger("chosen:updated"),updateSelections(!0)}).catch(err=>alert(err)).finally(()=>{$("#search-button-img").html(imgsave),null==rawdatagrid||rawdatagrid.updateConfig({data:getDBRawData()}).forceRender(),autoPopulateProfs()}),updateThemeMode()}}function toggleRawData(){toggleRawDataHTML=$("#toggle-raw-data-button").html().trim(),toggleRawDataHTML.includes('<i class="fa fa-caret-square-o-up')?($("#toggle-raw-data-button").html('&nbsp;<i class="fa fa-caret-square-o-down" title="Hide Raw Data"></i>&nbsp;&nbsp;Display Raw Data&nbsp;'),$(".raw-data-layout-container").show(10,(function(){updateThemeMode()})),null==rawdatagrid?(rawdatagrid=new gridjs.Grid({width:"100%",autoWidth:!0,sort:!0,columns:[{id:"year",name:"Year"},{id:"semester",name:"Semester"},{id:"professorName",name:"Professor Name"},{id:"section",name:"Section"},{id:"honors",name:"Honors"},{id:"avgGPA",name:"Avg GPA"},{id:"numA",name:"A",sort:!1},{id:"numB",name:"B",sort:!1},{id:"numC",name:"C",sort:!1},{id:"numD",name:"D",sort:!1},{id:"numF",name:"F",sort:!1},{id:"numI",name:"I",sort:!1},{id:"numQ",name:"Q",sort:!1},{id:"numS",name:"S",sort:!1},{id:"numU",name:"U",sort:!1},{id:"numX",name:"X",sort:!1}],data:getDBRawData()}).render(document.getElementById("raw-data-table-container")),$(window).resize((function(){rawdatagrid.updateConfig().forceRender()}))):rawdatagrid.updateConfig().forceRender()):($("#toggle-raw-data-button").html('&nbsp;<i class="fa fa-caret-square-o-up" title="Display Raw Data"></i>&nbsp;&nbsp;Display Raw Data&nbsp;'),$(".raw-data-layout-container").hide(10,(function(){})))}function toggleDarkMode(){toggleDarkmodeHTML=$("#darkmode-toggle").html().trim(),toggleDarkmodeHTML.includes('<i class="fa fa-sun-o')?($("#darkmode-toggle").html('<i class="fa fa-moon-o" aria-hidden="true"></i>&nbsp;<i class="fa fa-toggle-on" aria-hidden="true"></i>'),document.cookie="darkmode=true; path=/; SameSite=Strict;",darkmodeEnabled=!0):($("#darkmode-toggle").html('<i class="fa fa-sun-o" aria-hidden="true"></i>&nbsp;<i class="fa fa-toggle-off" aria-hidden="true"></i>'),document.cookie="darkmode=false; path=/; SameSite=Strict;",darkmodeEnabled=!1),updateThemeMode()}function updateThemeMode(){darkmodeEnabled?$("*").addClass("dark-theme"):$("*").removeClass("dark-theme")}