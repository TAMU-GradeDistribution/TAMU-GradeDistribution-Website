var allDepartments=[],allYears=[],responseCache=[],courseDataAll=[],courseData=[],courseProfs=[],courseDataGrid,courseGPAChart,courseGPAChartPlaceholderDataset,courseRangeChart,courseLetterChart,courseDiffChart;const skipped=(ctx,value)=>ctx.p0.skip||ctx.p1.skip?value:void 0;function getSupportedData(){requestSupported().then(value=>{$("#department_select").empty(),allDepartments.forEach((function(value){$("#department_select").append($("<option></option>").attr("value",value.toUpperCase()).text(value))})),$("#department_select").trigger("chosen:updated"),$("#year_range").jRange("updateRange",allYears[0]+","+allYears[allYears.length-1]),$("#year_range").jRange("updateRender",allYears)}).catch(err=>{alert(err)})}function getCourseData(){let department=$("#department_select").val(),course=$("#course_field").val();if(""===department||""===course)return;let searchButton=$("#search_button").html();$("#search_button").html('<i class="fa fa-refresh fa-spin" title="Loading..."></i>'),requestSearch(department,course).catch(err=>{alert(err)}).finally(()=>{$("#search_button").html(searchButton),autoPopulateProfs()})}function requestSupported(){return new Promise((resolve,reject)=>{setTimeout(()=>{reject("Server error ([/supported] timed out).")},5e3);for(let i=0;i<responseCache.length;i++)if("supported"===responseCache[i].query)return allYears=responseCache[i].years,allDepartments=responseCache[i].departments,void resolve("Found in cache");fetch("supported").then(response=>{response.text().then(responseText=>{"[]"!==responseText?(allYears=[],allDepartments=[],JSON.parse(responseText.split("|")[0]).forEach(year=>{allYears.push(year.year)}),JSON.parse(responseText.split("|")[1]).forEach(dept=>{allDepartments.push(dept.departmentName)}),allYears.sort(),allDepartments.sort(),responseCache.push({query:"supported",years:allYears,departments:allDepartments}),resolve("Done")):reject("Server error ([/supported] bad response).")})}).catch(err=>{reject(err)})})}function requestSearch(department,course){return new Promise((resolve,reject)=>{setTimeout(()=>{reject("Server error ([/search] timed out). Try again in a bit.")},5e3),department=department.toUpperCase(),course=course.toUpperCase();let query="search?d="+department+"&c="+course;for(let i=0;i<responseCache.length;i++)if(responseCache[i].query===query)return null===responseCache[i].data&&reject(department+" "+course+" not found!"),courseData=responseCache[i].data,courseDataAll=responseCache[i].data,filterCourseData(),void resolve("Found in cache");fetch(query).then(response=>{response.text().then(responseText=>{if("[]"===responseText)return responseCache.push({query:query,data:null}),void reject(department+" "+course+" not found!");courseData=JSON.parse(responseText),courseDataAll=JSON.parse(responseText),filterCourseData(),responseCache.push({query:query,data:courseDataAll}),resolve("Done")})}).catch(err=>{reject(err)})})}function filterCourseData(){let selectedYears=interpolateNumArray($("#year_range").val().split(","),1),selectedSemesters=($("#semester_select").chosen().val()+"").split(",").map(value=>value.toUpperCase()),selectedHonors=$("#honors_select").chosen().val().toUpperCase();courseData=(courseData=JSON.parse(JSON.stringify(courseDataAll))).filter(course=>selectedYears.includes(course.year)&&selectedSemesters.includes(course.semester)),courseProfs=courseData.filter((value,index,self)=>self.indexOf(value)===index),courseData=courseData.filter(course=>honorsFilter(selectedHonors,course.honors))}function updateSelection(){var department=$("#department_select").val(),course=$("#course_field").val();""!==department&&""!==course&&(filterCourseData(),void 0===courseDataGrid||courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender(),courseGPAChart.data.labels=getGPAChartLabels(),getGPAChartDataset(newDataset=>{courseGPAChart.data.datasets=newDataset,courseGPAChart.update("none")}),getGPARangeChartDataset(newDataset=>{courseRangeChart.data.datasets=newDataset,courseRangeChart.update("none")}),getLetterChartDataset(newDataset=>{courseLetterChart.data.datasets=newDataset,courseLetterChart.update("none")}),getCourseDifficultyChartDataset(newDataset=>{courseDiffChart.data.datasets=newDataset,courseDiffChart.update("none")}),updateThemeMode())}function getGPAChartLabels(years,semesters){years||(years=$("#year_range").val().split(",")),semesters||(semesters=$("#semester_select").chosen().val());let labels=[];years=interpolateNumArray(years,1);for(let i=0;i<years.length;i++)for(let j=0;j<semesters.length;j++)labels.push(semesters[j]+" "+years[i].toString().slice(2)+"'");return labels}function autoPopulateProfs(){let profs=courseProfs.filter((value,index,self)=>{let count=0;for(let i=0;i<self.length;i++)self[i].professorName!==value.professorName||self[i].year===value.year&&self[i].semester===value.semester||count++;return count>=2});$("#professor_select").empty(),profs=profs.map(course=>course.professorName),profs=profs.filter((value,index,self)=>self.indexOf(value)===index),profs.forEach(prof=>{$("#professor_select").append('<option value="'+prof+'" selected>'+prof+"</option>")});let otherProfs=courseProfs.map(course=>course.professorName);otherProfs=otherProfs.filter((value,index,self)=>self.indexOf(value)===index&&!profs.includes(value)),otherProfs.forEach(prof=>{$("#professor_select").append('<option value="'+prof+'">'+prof+"</option>")}),$("#professor_select").trigger("chosen:updated"),updateSelection()}function getGPAChartDataset(callback){let years=interpolateNumArray(($("#year_range").val()+"").split(","),1),semesters=$("#semester_select").chosen().val(),professors=$("#professor_select").chosen().val(),profWeightedGPA=new Array(professors.length),profNumStudents=new Array(professors.length);for(let i=0;i<profWeightedGPA.length;i++)profWeightedGPA[i]=new Array(years.length*semesters.length).fill(0),profNumStudents[i]=new Array(years.length*semesters.length).fill(0);for(let j=0;j<courseData.length;j++)for(let k=0;k<years.length*semesters.length;k++){let tmp1=Math.floor(k/semesters.length)%years.length,tmp2=Math.floor(k%semesters.length);if(courseData[j].year===Number(years[tmp1])&&courseData[j].semester===semesters[tmp2].toUpperCase()){let prof=professors.indexOf(courseData[j].professorName);if(-1!=prof){let sectionNumStudents=Number(courseData[j].numA)+Number(courseData[j].numB)+Number(courseData[j].numC)+Number(courseData[j].numD)+Number(courseData[j].numF);profWeightedGPA[prof][k]+=Number(courseData[j].avgGPA)*Number(sectionNumStudents),profNumStudents[prof][k]+=Number(sectionNumStudents)}}}for(let i=0;i<profWeightedGPA.length;i++)for(let j=0;j<years.length*semesters.length;j++)profWeightedGPA[i][j]=Number(profWeightedGPA[i][j])/Number(profNumStudents[i][j]);let colors=getColors(),dataset=[];for(let i=0;i<profWeightedGPA.length;i++)dataset.push({label:professors[i],data:profWeightedGPA[i],fill:!1,borderColor:colors[i],backgroundColor:colors[i]+"80",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}});return callback(dataset)}function getGPARangeChartDataset(callback){let labels=["","GPA Low: ","GPA Avg: ","GPA High: ",""],bgColors=["rgba(102,102,102,0.66)","rgba(247,194,14,0.66)","rgba(128,149,7,0.66)","rgba(247,194,14,0.66)","rgba(102,102,102,0.66)"],gpaRange=new Array(labels.length).fill(0),gpaMin=4,gpaMax=0,gpaAvg=0,count=0;for(let i=0;i<courseData.length;i++){let num=Number(courseData[i].avgGPA);gpaAvg+=num,count+=1,gpaMin=Math.min(gpaMin,num),gpaMax=Math.max(gpaMax,num)}gpaAvg/=count,gpaRange[2]=.04,gpaRange[0]=gpaMin,gpaRange[1]=gpaAvg-gpaMin-gpaRange[2]/2,gpaRange[3]=gpaMax-gpaRange[0]-gpaRange[1]-gpaRange[2]-gpaRange[2]/2,gpaRange[4]=4-(gpaRange[0]+gpaRange[1]+gpaRange[2]+gpaRange[3]),labels[1]+=""+Number(gpaMin).toFixed(3),labels[2]+=""+Number(gpaAvg).toFixed(3),labels[3]+=""+Number(gpaMax).toFixed(3),dataset=[];for(let i=0;i<gpaRange.length;i++)dataset.push({label:labels[i],data:[gpaRange[i]],backgroundColor:bgColors[i],borderWidth:1});return callback(dataset)}function getLetterChartDataset(callback){let labels=["A","B","C","D","F","Q"],bgColors=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)","rgba(102,102,102,0.66)"],avgLetterGrade=new Array(labels.length).fill(0);for(let i=0;i<courseData.length;i++)avgLetterGrade[0]+=Number(courseData[i].numA),avgLetterGrade[1]+=Number(courseData[i].numB),avgLetterGrade[2]+=Number(courseData[i].numC),avgLetterGrade[3]+=Number(courseData[i].numD),avgLetterGrade[4]+=Number(courseData[i].numF),avgLetterGrade[5]+=Number(courseData[i].numQ);let count=avgLetterGrade[0]+avgLetterGrade[1]+avgLetterGrade[2]+avgLetterGrade[3]+avgLetterGrade[4]+avgLetterGrade[5];for(let i=0;i<avgLetterGrade.length;i++)avgLetterGrade[i]=avgLetterGrade[i]/count*99.999999;dataset=[];for(let i=0;i<avgLetterGrade.length;i++)dataset.push({label:labels[i],data:[avgLetterGrade[i]],backgroundColor:bgColors[i],borderWidth:1});return callback(dataset)}function getCourseDifficultyChartDataset(callback){let years=interpolateNumArray(($("#year_range").val()+"").split(","),1),semesters=$("#semester_select").chosen().val(),honors=$("#honors_select").chosen().val(),bgColors=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)"],minGPA=4,avgGPA=0,count=0,numStudentsPass=0,numStudentsFail=0,courseDiff=0,profs=[];for(let i=0;i<courseDataAll.length;i++)years.includes(courseDataAll[i].year)&&semesters.includes(courseDataAll[i].semester)&&honorsFilter(honors,courseDataAll[i].honors)&&(avgGPA+=Number(courseDataAll[i].avgGPA),count+=1,numStudentsPass+=Number(courseDataAll[i].numA),numStudentsPass+=Number(courseDataAll[i].numB),numStudentsPass+=Number(courseDataAll[i].numC),numStudentsFail+=Number(courseDataAll[i].numD),numStudentsFail+=Number(courseDataAll[i].numF),numStudentsFail+=Number(courseDataAll[i].numI),numStudentsFail+=Number(courseDataAll[i].numS),numStudentsFail+=Number(courseDataAll[i].numU),numStudentsFail+=Number(courseDataAll[i].numQ),numStudentsFail+=Number(courseDataAll[i].numX),profs.includes(courseDataAll[i].professorName)||profs.push(courseDataAll[i].professorName),minGPA>Number(courseDataAll[i].avgGPA)&&(minGPA=Number(courseDataAll[i].avgGPA)));return avgGPA/=count,courseDiff+=1,.075<numStudentsFail/(numStudentsPass+numStudentsFail)&&(courseDiff+=1),.1<numStudentsFail/(numStudentsPass+numStudentsFail)&&(courseDiff+=1),avgGPA<3.5&&(courseDiff+=1),avgGPA<3.25&&(courseDiff+=1),avgGPA<3&&(courseDiff+=1),avgGPA<2.75&&(courseDiff+=1),avgGPA<2.25&&(courseDiff+=1),minGPA<2.5&&(courseDiff+=1),minGPA<2&&(courseDiff+=1),dataset=[],dataset.push({label:"Difficulty",data:[courseDiff],backgroundColor:bgColors[Math.floor((courseDiff-1)/2)],borderWidth:1}),dataset.push({label:"",data:[10-courseDiff],backgroundColor:"rgba(102,102,102,0.66)",borderWidth:1}),callback(dataset)}function getCourseDataGridDataset(){let selectedProfessors=($("#professor_select").chosen().val()+"").split(",").map(value=>value.toUpperCase()),courseDataGridDataset=JSON.parse(JSON.stringify(courseData));return courseDataGridDataset=courseDataGridDataset.map(course=>(course.honors=course.honors?"Yes":"No",course)),courseDataGridDataset=courseDataGridDataset.map(course=>(course.avgGPA=""+Number(course.avgGPA).toFixed(3),course)),courseDataGridDataset=courseDataGridDataset.filter(course=>selectedProfessors.includes(course.professorName)),courseDataGridDataset}function toggleRawData(){$("#toggle_raw_data_button").html().trim().includes('<i class="fa fa-caret-square-o-up')?($("#toggle_raw_data_button").html('&nbsp;<i class="fa fa-caret-square-o-down" title="Hide Raw Data"></i>&nbsp;&nbsp;Hide Raw Data&nbsp;'),$("#raw_data_layout_container").show(10,(function(){updateThemeMode()})),void 0===courseDataGrid?(courseDataGrid=new gridjs.Grid({width:"100%",autoWidth:!0,sort:!0,columns:[{id:"year",name:"Year"},{id:"semester",name:"Semester"},{id:"professorName",name:"Professor Name"},{id:"section",name:"Section"},{id:"honors",name:"Honors"},{id:"avgGPA",name:"Avg GPA"},{id:"numA",name:"A",sort:!1},{id:"numB",name:"B",sort:!1},{id:"numC",name:"C",sort:!1},{id:"numD",name:"D",sort:!1},{id:"numF",name:"F",sort:!1},{id:"numI",name:"I",sort:!1},{id:"numQ",name:"Q",sort:!1},{id:"numS",name:"S",sort:!1},{id:"numU",name:"U",sort:!1},{id:"numX",name:"X",sort:!1}],data:getCourseDataGridDataset()}).render(document.getElementById("raw_data_table_container")),$(window).resize((function(){courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender()}))):courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender()):($("#toggle_raw_data_button").html('&nbsp;<i class="fa fa-caret-square-o-up" title="Display Raw Data"></i>&nbsp;&nbsp;Display Raw Data&nbsp;'),$("#raw_data_layout_container").hide(10,(function(){})))}function regenGPAChartColors(){courseGPAChart.data.datasets!==courseGPAChartPlaceholderDataset&&getGPAChartDataset(newDataset=>{courseGPAChart.data.datasets=newDataset,courseGPAChart.update("none")})}function honorsFilter(selectedHonors,isHonors){return"INHONORS"===selectedHonors||("EXHONORS"===selectedHonors?!Boolean(isHonors):"ONHONORS"===selectedHonors&&Boolean(isHonors))}function interpolateNumArray(numArray,stepsize){let newArray=[Number(numArray[0])];for(;newArray[newArray.length-1]<Number(numArray[numArray.length-1]);)newArray.push(newArray[newArray.length-1]+stepsize);return newArray}function getColors(){let colors;return colors=document.body.classList.contains("light-theme")?["#a0b242","#5858bc","#d1972c","#7283e9","#65bc69","#af439d","#45c097","#563482","#728537","#c083d8","#bb7937","#628dd4","#ba4c41","#c5639f","#b44267"]:["#97ebdd","#ddb5dc","#cfeaaf","#74aff3","#e9c59a","#5ecee9","#eab4b5","#98cea5","#bcb8ec","#bdc08c","#92bde8","#dae9d3","#7ecac7","#b3cee3","#b1beaf"],colors=colors.map(value=>({value:value,sort:Math.random()})).sort((a,b)=>a.sort-b.sort).map(({value:value})=>value),colors.concat(colors)}document.addEventListener("DOMContentLoaded",()=>{$("#raw_data_layout_container").hide(),$("#department_select").chosen({width:"100%"}),$("#professor_select").chosen({width:"100%",max_selected_options:0,disable_search_threshold:10,hide_results_on_select:!1}),$("#semester_select").chosen({width:"100%",max_selected_options:3,disable_search:!0}),$("#honors_select").chosen({width:"150px",disable_search:!0}),$("#professor_select").chosen().change((function(evt,params){updateSelection()})),$("#semester_select").chosen().change((function(evt,params){updateSelection()})),$("#honors_select").chosen().change((function(evt,params){updateSelection()})),$("#course_range_chart_canvas").tipso({position:"bottom",width:$("#course_range_chart_canvas").width(),titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:"The yellow area indicates the range between the highest and lowest GPAs acheived during the selected years and semesters. The small green bar indicates the average GPA which was acheived."}),$("#course_letter_chart_canvas").tipso({position:"bottom",width:$("#course_letter_chart_canvas").width(),titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:"There is a section with a corresponding color for each of the following grade letters: [A, B, C, D, F, Q]. This chart shows the percentage at which each grade letter was recieved relative to each other."}),$("#course_difficulty_chart_canvas").tipso({position:"bottom",width:$("#course_difficulty_chart_canvas").width(),tooltipHover:!0,titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:'This chart takes a few of the statistics for the course and plugs them into the following <span class="color-black"><a href="https://github.com/TAMU-GradeDistribution/TAMU-GradeDistribution-Website/blob/main/public/scripts/main.js#L875"> formula</a></span> to determine a relative difficulty score for each course.'}),$("#year_range").jRange({from:0,to:9999999,step:1,scale:1,format:"%s",width:$(".inner-year-container").width(),showLabels:!1,snap:!0,isRange:!0,onstatechange:()=>{updateSelection()}}),getSupportedData(),courseGPAChartPlaceholderDataset=[{label:"Professor 1",data:[1.2,1.8,void 0,3.1,3.2,3,3.3,3.6,2.5,2.9,void 0,void 0,3,2.6,3.2,3.6],fill:!1,borderColor:"#666666",backgroundColor:"#66666680",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}},{label:"Professor 2",data:[3.2,2.8,3.2,2.6,2.3,void 0,void 0,3.2,3.5,3.6,3.4,2.6,2.9,3.1,3.4,2.75],fill:!1,borderColor:"#9944FF",backgroundColor:"#9944FF80",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}},{label:"Professor 3",data:[2.2,3.8,2.6,3.2,2.6,3.6,2.7,2.1,2.2,1.6,1.45,2.1,2.2,1.45,1.6,2.1],fill:!1,borderColor:"#CC77CC",backgroundColor:"#CC77CC80",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}},{label:"Professor 4",data:[1.5,1.6,1.4,1.8,1.3,1.4,1.9,1.7,1.5,1.5,1.7,1.8,2,2.1,1.95,1.7],fill:!1,borderColor:"#77CC77",backgroundColor:"#77CC7780",tension:.1,borderWidth:2,segment:{borderDash:ctx=>skipped(ctx,[6,6])}}],courseGPAChart=new Chart(ctx=document.getElementById("gpa_chart_canvas").getContext("2d"),{type:"line",data:{labels:getGPAChartLabels([2014,2021],["SPRING","FALL"]),datasets:courseGPAChartPlaceholderDataset},options:{responsive:!0,maintainAspectRatio:!1,spanGaps:!0,plugins:{legend:{display:!0,position:"right",align:"left",labels:{usePointStyle:!0,boxWidth:10}},tooltip:{callbacks:{label:function(ctx){return ctx.dataset.label+": "+Number(ctx.parsed.y).toFixed(3)}}}},interaction:{intersect:!1},xAxes:[{ticks:{autoSkip:!0,maxRotation:90,minRotation:0}}]}}),courseRangeChart=new Chart(ctx=document.getElementById("course_range_chart_canvas").getContext("2d"),{type:"bar",data:{labels:[""],datasets:[{label:"",data:[1.3],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1},{label:"GPA Low: 1.300",data:[1.53],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"GPA Avg: 2.830",data:[.04],backgroundColor:"rgba(128,149,7,.66)",borderWidth:1},{label:"GPA High: 3.910",data:[1.08],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"",data:[.05],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{ticks:{suggestedMin:0,suggestedMax:4,min:0,max:4},stacked:!0},y:{stacked:!0}},plugins:{title:{display:!0,text:"Course GPA Range"},legend:{display:!1},tooltip:{enabled:!1,callbacks:{label:function(ctx){return ctx.dataset.label}}}},interaction:{intersect:!1,mode:"y"}}}),courseLetterChart=new Chart(ctx=document.getElementById("course_letter_chart_canvas").getContext("2d"),{plugins:[ChartDataLabels],type:"bar",data:{labels:[""],datasets:[{label:"A",data:[32],backgroundColor:"rgba(128,149,7,.66)",borderWidth:1},{label:"B",data:[39],backgroundColor:"rgba(175,166,5,.66)",borderWidth:1},{label:"C",data:[14],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"D",data:[7],backgroundColor:"rgba(250,45,8,.66)",borderWidth:1},{label:"F",data:[5],backgroundColor:"rgba(211,15,2,.66)",borderWidth:1},{label:"Q",data:[3],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{stacked:!0,ticks:{min:0,max:100,callback:function(value){return value+"%"}}},y:{stacked:!0}},plugins:{title:{display:!0,text:"Course Letter Grades"},legend:{display:!1},tooltip:{callbacks:{label:function(ctx){return ctx.dataset.label+": "+Number(ctx.dataset.data).toFixed(1)+"%"}}},datalabels:{color:"#000000B0",formatter:function(value,ctx){return Number(ctx.dataset.data)>1.5?ctx.dataset.label:""}}},interaction:{intersect:!1}}}),courseDiffChart=new Chart(ctx=document.getElementById("course_difficulty_chart_canvas").getContext("2d"),{plugins:[ChartDataLabels],type:"bar",data:{labels:[""],datasets:[{label:"Difficulty",data:[6],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"",data:[4],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{stacked:!0,ticks:{min:1,max:10}},y:{stacked:!0}},plugins:{title:{display:!0,text:"Relative Course Difficulty"},legend:{display:!1},tooltip:{enabled:!1},datalabels:{color:"#000000B0",formatter:function(value,ctx){return"Difficulty"===ctx.dataset.label?value+"/10":""}}},interaction:{intersect:!1}}}),document.getElementById("thememode_toggle").addEventListener("click",()=>{regenGPAChartColors()}),document.getElementById("course_field").addEventListener("keyup",e=>{"Enter"===e.key&&getCourseData()}),document.getElementById("search_button").addEventListener("click",()=>{getCourseData()}),document.getElementById("new_chart_colors_button").addEventListener("click",()=>{regenGPAChartColors()}),document.getElementById("toggle_raw_data_button").addEventListener("click",()=>{toggleRawData()}),document.getElementById("back_to_top").addEventListener("click",()=>{document.body.scrollTo({top:0,behavior:"smooth"})}),$(document.body).scroll((function(){isElementVisible($(".footer-bar"))?$("#back-to-top").css("bottom",$(window).height()-$(".footer-bar").position().top):$("#back-to-top").css("bottom","0")}))});